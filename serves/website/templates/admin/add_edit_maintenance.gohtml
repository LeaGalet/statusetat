{{ extends "admin/index.gohtml" }}
{{ define "title" }}{{.BaseInfo.Title}} - Admin report incident{{ end }}
{{ define "content" }}
  <div class="row">
    <div class="col s12">
      <div class="head">
        <h4><a href="/admin/maintenance" class="black-text">Maintenance</a>
          &gt; {{ if .Incident.GUID }}edit{{else}}add{{end}} maintenance</h4>
        <div class="divider"></div>
      </div>
      <form class="col s12" id="form-incident">
        <input type="hidden" name="incident-guid" value="{{ .Incident.GUID }}">
        <input type="hidden" name="message-guid" value="{{ .Incident.MainMessage.GUID }}">
        <input type="hidden" name="incident-state" value="{{ .Incident.State }}">
        <div class="row">
          <div class="input-field col s12">
            <input id="title" name="title" type="text" value="{{ .Incident.MainMessage.Title }}" class="validate">
            <label for="title">Title *</label>
          </div>
        </div>
        <div class="row">
          <div class="col s12">
            <label for="chips-components">Components impacted *</label>
            <div class="chips chips-components">
            </div>
          </div>
        </div>
        <div class="row">
          <div class="input-field col s12">
            <textarea id="message" name="content" class="materialize-textarea markdown" style="height: 200px;">{{ .Incident.MainMessage.Content }}</textarea>
            <label for="message">Message * (You can write in markdown)</label>
          </div>
        </div>
        <div class="row">
          <div class="input-field col s8">
            <input id="created-at-date" type="text" name="created-at-date" class="datepicker validate" value="{{ .Incident.CreatedAt | timeFmtCustom "2006-01-02" }}">
            <label for="created-at-date">At what date this will start ? *</label>
          </div>
          <div class="input-field col s4">
            <input id="created-at-time" type="text" name="created-at-time" class="timepicker validate" value="{{ .Incident.CreatedAt | timeFmtCustom "15:04" }}">
            <label for="created-at-time">And at what time ? *</label>
          </div>
        </div>
        <div class="row">
          <div class="input-field col s8">
            <input id="scheduled-end-at-date" type="text" name="scheduled-end-at-date" class="datepicker validate" value="{{ .Incident.ScheduledEnd | timeFmtCustom "2006-01-02" }}">
            <label for="scheduled-end-at-date">At what date this will end ? *</label>
          </div>
          <div class="input-field col s4">
            <input id="scheduled-end-at-time" type="text" name="scheduled-end-at-time" class="timepicker validate" value="{{ .Incident.ScheduledEnd | timeFmtCustom "15:04" }}">
            <label for="scheduled-end-at-time">And at what time ? *</label>
          </div>
        </div>
          {{ if gt .MetadataFields.LenScheduled 0 }}
            <div class="row">
              <h4>Metadata field for notifier</h4>
              <hr/>
                {{ range .MetadataFields }}
                    {{ if .ForScheduled }}
                      <div class="input-field col s12">
                          {{ template "components/metadata_field.gohtml" (dict "Incident" $.Incident "Field" .) }}
                      </div>
                    {{ end }}
                {{ end }}
            </div>
          {{end}}
        <div class="row">
          <div class="col s12">
            <button type="submit" class="waves-effect waves-light btn green lighten-1 white-text">
                {{ if .Incident.GUID }}Edit{{else}}Add Maintenance{{end}}
            </button>
            <button type="button" data-target="preview-incident" class="waves-effect waves-light btn grey lighten-4 grey-text modal-trigger">
              Preview
            </button>
            <button type="button" class="waves-effect waves-light btn grey lighten-4 grey-text cancel-btn">
              Cancel
            </button>
          </div>
        </div>
      </form>
    </div>
  </div>
{{end}}
{{ define "pre_body_close" }}
    {{ template "components/chips-components.gohtml" . }}
    <script type="text/javascript">
        $(document).ready(function () {
            $('.cancel-btn').click(function (e) {
                window.location.replace("/admin/maintenance");
            });

            M.Datepicker.getInstance(document.getElementById('created-at-date')).options.onSelect = function (newDate) {
                $('#scheduled-end-at-date').val(moment(newDate).format('YYYY-MM-DD'));
            };

            M.Timepicker.getInstance(document.getElementById('created-at-time')).options.onSelect = function (hours, minutes) {
                $('#scheduled-end-at-time').val(moment(hours + ":" + minutes, "HH:mm").add(2, 'hours').format('HH:mm'));
            };

            let createdAt = Date.parse({{ .Incident.CreatedAt | timeStdFormat }});
            let scheduledEnd = Date.parse({{ .Incident.ScheduledEnd | timeStdFormat }});
            $("#created-at-date").val(moment(createdAt).format('YYYY-MM-DD'));
            $("#scheduled-end-at-date").val(moment(scheduledEnd).format('YYYY-MM-DD'));
            $("#created-at-time").val(moment(createdAt).format('HH:mm'));
            $("#scheduled-end-at-time").val(moment(scheduledEnd).format('HH:mm'));
            $('#form-incident button[type="submit"]').click(function (e) {
                e.preventDefault();
                $('.alert-box .alert').hide();
                let btn = $(this);
                let method = "POST";
                let path = "/v1/incidents";

                formData = new FormData(document.getElementById("form-incident"));
                btn.append($('.preloader-box').html());
                btn.addClass("disabled");
                let componentTags = M.Chips.getInstance(document.querySelector('.chips-components')).chipsData;
                let components = [];
                let metadata = [];

                document.querySelectorAll('.metadata-field').forEach(function (item) {
                    metadata.push({
                        "key": item.getAttribute("name"),
                        "value": item.value,
                    });
                });
                if (metadata.length === 0) {
                    metadata = null;
                }

                componentTags.forEach(element => components.push(element.tag));

                let state = parseInt(formData.get("incident-state"), 10);
                if (formData.get("incident-guid") === "") {
                    // set state idle by default
                    state = 3;
                }

                let guid = formData.get("incident-guid");
                let data = {
                    "messages": [{
                        "incident_guid": guid,
                        "guid": formData.get("message-guid"),
                        "title": formData.get("title"),
                        "content": formData.get("content")
                    }],
                    "incident_guid": formData.get("incident-guid"),
                    "state": state,
                    "components": components,
                    "is_scheduled": true,
                    "created_at": moment(formData.get("created-at-date") + " " + formData.get("created-at-time"), "YYYY-MM-DD HH:mm").format(),
                    "scheduled_end": moment(formData.get("scheduled-end-at-date") + " " + formData.get("scheduled-end-at-time"), "YYYY-MM-DD HH:mm").format(),
                    "metadata": metadata,
                };

                if (guid) {
                    method = "PUT";
                    path = "/v1/incidents/" + guid + "?partial_update_message";
                    data["no_notify"] = true;
                }
                console.log(data);
                $.ajax({
                    url: path,
                    type: method,
                    async: false,
                    cache: false,
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    dataType: "json",
                    timeout: 30000,
                    error: function (err) {
                        btn.removeClass("disabled");
                        $('.preload-btn', btn).remove();
                        $('.alert-box .content').html('Code ' + err.responseJSON.status + ' ' + err.responseJSON.description + ': ' + err.responseJSON.detail);
                        $(window).scrollTop(0);
                        $('.alert-box .alert').show();
                    },
                    success: function (msg) {
                        window.location.replace("/admin/maintenance");
                    }
                });
            });
        });
    </script>
{{end}}